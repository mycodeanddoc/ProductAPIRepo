{
	"info": {
		"_postman_id": "9602d408-3c2f-4907-b9a7-68adfcc23cc8",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3406f293-2e27-4380-8f78-2cf85c572a22",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//Structure Test for the first returned object\r",
							"pm.test(\"Response has Id\",function(){pm.response.to.have.jsonBody(\"[0].Id\")});\r",
							"\r",
							"pm.test(\"Response has Name\",function(){pm.response.to.have.jsonBody(\"[0].Name\")});\r",
							"\r",
							"pm.test(\"Response has Category\",function(){pm.response.to.have.jsonBody(\"[0].Category\")});\r",
							"\r",
							"pm.test(\"Response has Price\",function(){pm.response.to.have.jsonBody(\"[0].Price\")});\r",
							"\r",
							"//Tests for first object\r",
							"pm.test(\"Value of [0].Id is 1\", function(){\r",
							"    pm.expect(1).to.equal(jsonData[0].Id)});\r",
							"\r",
							"pm.test(\"Value of [0].Name is Tomato Soup\", function(){\r",
							"    pm.expect(\"Tomato Soup\").to.equal(jsonData[0].Name)}); \r",
							"\r",
							"pm.test(\"Value of [0].Category is Groceries\", function(){\r",
							"    pm.expect(\"Groceries\").to.equal(jsonData[0].Category)});        \r",
							"\r",
							"pm.test(\"Value of [0].Price is 1.0\", function(){\r",
							"    pm.expect(1.0).to.equal(jsonData[0].Price)});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//Tests for second object\r",
							"pm.test(\"Value of [1].Id is 2\", function(){\r",
							"    pm.expect(2).to.equal(jsonData[1].Id)});\r",
							"\r",
							"pm.test(\"Value of [1].Name is Yo-yo\", function(){\r",
							"    pm.expect(\"Yo-yo\").to.equal(jsonData[1].Name)}); \r",
							"\r",
							"pm.test(\"Value of [1].Category is Toys\", function(){\r",
							"    pm.expect(\"Toys\").to.equal(jsonData[1].Category)});        \r",
							"\r",
							"pm.test(\"Value of [1].Price is 3.75\", function(){\r",
							"    pm.expect(3.75).to.equal(jsonData[1].Price)});\r",
							"\r",
							"\r",
							"\r",
							"//Tests for second object\r",
							"pm.test(\"Value of [2].Id is 3\", function(){\r",
							"    pm.expect(3).to.equal(jsonData[2].Id)});\r",
							"\r",
							"pm.test(\"Value of [2].Name is Hammer\", function(){\r",
							"    pm.expect(\"Hammer\").to.equal(jsonData[2].Name)}); \r",
							"\r",
							"pm.test(\"Value of [2].Category is Hardware\", function(){\r",
							"    pm.expect(\"Hardware\").to.equal(jsonData[2].Category)});        \r",
							"\r",
							"pm.test(\"Value of [2].Price is 16.99\", function(){\r",
							"    pm.expect(16.99).to.equal(jsonData[2].Price)});\r",
							"\r",
							"\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							"    pm.response.to.have.status(200);});\r",
							"\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:55532/api/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "55532",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Second Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d5f733e-3316-4509-a32b-18671a3ffe91",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//Structure Test for the first returned object\r",
							"pm.test(\"Response has Id\",function(){pm.response.to.have.jsonBody(\"Id\")});\r",
							"\r",
							"pm.test(\"Response has Name\",function(){pm.response.to.have.jsonBody(\"Name\")});\r",
							"\r",
							"pm.test(\"Response has Category\",function(){pm.response.to.have.jsonBody(\"Category\")});\r",
							"\r",
							"pm.test(\"Response has Price\",function(){pm.response.to.have.jsonBody(\"Price\")});\r",
							"\r",
							"\r",
							"//Tests for first object\r",
							"pm.test(\"Value of Id is 1\", function(){\r",
							"    pm.expect(1).to.equal(jsonData.Id)});\r",
							"\r",
							"pm.test(\"Value of Name is Tomato Soup\", function(){\r",
							"    pm.expect(\"Tomato Soup\").to.equal(jsonData.Name)}); \r",
							"\r",
							"pm.test(\"Value of Category is Groceries\", function(){\r",
							"    pm.expect(\"Groceries\").to.equal(jsonData.Category)});        \r",
							"\r",
							"pm.test(\"Value of Price is 1.0\", function(){\r",
							"    pm.expect(1.0).to.equal(jsonData.Price)});\r",
							"\r",
							"\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							"    pm.response.to.have.status(200);});\r",
							"\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:55532/api/products/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "55532",
					"path": [
						"api",
						"products",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}